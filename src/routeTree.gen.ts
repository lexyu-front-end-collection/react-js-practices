/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as hidden_foldertoysToysTodoAppRouteImport } from './routes/(hidden_folder)/(toys)/toys.todo-app'
import { Route as hidden_foldertoysToysStopwatchRouteImport } from './routes/(hidden_folder)/(toys)/toys.stopwatch'
import { Route as hidden_foldertoysToysColorPickerRouteImport } from './routes/(hidden_folder)/(toys)/toys.color-picker'
import { Route as hidden_foldertoysToysClockRouteImport } from './routes/(hidden_folder)/(toys)/toys.clock'
import { Route as hidden_folderlibrariesLibsZustandRouteImport } from './routes/(hidden_folder)/(libraries)/libs.zustand'
import { Route as hidden_folderlibrariesLibsDndRouteImport } from './routes/(hidden_folder)/(libraries)/libs.dnd'
import { Route as hidden_folderlibrariesLibsCvaTwmergeRouteImport } from './routes/(hidden_folder)/(libraries)/libs.cva-twmerge'
import { Route as hidden_folderhooksHooksWithoutusesyncexternalstoreRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.withoutusesyncexternalstore'
import { Route as hidden_folderhooksHooksUsetransitionRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.usetransition'
import { Route as hidden_folderhooksHooksUsethrottleRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.usethrottle'
import { Route as hidden_folderhooksHooksUsesyncexternalstoreRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.usesyncexternalstore'
import { Route as hidden_folderhooksHooksUsestateRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.usestate'
import { Route as hidden_folderhooksHooksUserefRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.useref'
import { Route as hidden_folderhooksHooksUsereducerRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.usereducer'
import { Route as hidden_folderhooksHooksUsememoRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.usememo'
import { Route as hidden_folderhooksHooksUselayouteffectRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.uselayouteffect'
import { Route as hidden_folderhooksHooksUseintervalRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.useinterval'
import { Route as hidden_folderhooksHooksUseinsertioneffectRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.useinsertioneffect'
import { Route as hidden_folderhooksHooksUseimperativehandleRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.useimperativehandle'
import { Route as hidden_folderhooksHooksUseidRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.useid'
import { Route as hidden_folderhooksHooksUseeffectRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.useeffect'
import { Route as hidden_folderhooksHooksUsedeferredvalueRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.usedeferredvalue'
import { Route as hidden_folderhooksHooksUsedebounceRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.usedebounce'
import { Route as hidden_folderhooksHooksUsecontextRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.usecontext'
import { Route as hidden_folderhooksHooksUsecallbackRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.usecallback'
import { Route as hidden_folderhooksHooksIntervalProblem2RouteImport } from './routes/(hidden_folder)/(hooks)/hooks.interval-problem-2'
import { Route as hidden_folderhooksHooksIntervalProblem1RouteImport } from './routes/(hidden_folder)/(hooks)/hooks.interval-problem-1'
import { Route as hidden_folderhooksHooksBeforeUsecallbackRouteImport } from './routes/(hidden_folder)/(hooks)/hooks.before-usecallback'
import { Route as hidden_folderdata_fetchingDataFetchingReactQueryRouteImport } from './routes/(hidden_folder)/(data_fetching)/data-fetching.react-query'
import { Route as hidden_folderdata_fetchingDataFetchingOwnHandleRouteImport } from './routes/(hidden_folder)/(data_fetching)/data-fetching.own-handle'
import { Route as hidden_folderbasicBasicPropsChildrenRouteImport } from './routes/(hidden_folder)/(basic)/basic.props-children'
import { Route as hidden_folderbasicBasicPortalRouteImport } from './routes/(hidden_folder)/(basic)/basic.portal'
import { Route as hidden_folderbasicBasicListOfDataRouteImport } from './routes/(hidden_folder)/(basic)/basic.list-of-data'
import { Route as hidden_folderbasicBasicConditionalRenderingRouteImport } from './routes/(hidden_folder)/(basic)/basic.conditional-rendering'
import { Route as hidden_folderanimationMt01RouteImport } from './routes/(hidden_folder)/(animation)/mt.01'
import { Route as hidden_folderanimationMh02RouteImport } from './routes/(hidden_folder)/(animation)/mh.02'
import { Route as hidden_folderanimationMh01RouteImport } from './routes/(hidden_folder)/(animation)/mh.01'
import { Route as hidden_folderanimationMg01RouteImport } from './routes/(hidden_folder)/(animation)/mg.01'
import { Route as hidden_folderanimationM01RouteImport } from './routes/(hidden_folder)/(animation)/m.01'
import { Route as hidden_folderdemosverify_emailDemosVerifyPageRouteImport } from './routes/(hidden_folder)/(demos)/(verify_email)/demos.verify-page'
import { Route as hidden_folderdemosverify_emailDemosResultPageRouteImport } from './routes/(hidden_folder)/(demos)/(verify_email)/demos.result-page'
import { Route as hidden_folderdemostoastDemosToastRouteImport } from './routes/(hidden_folder)/(demos)/(toast)/demos.toast'
import { Route as hidden_folderdemosmarkdownDemosMarkdownRouteImport } from './routes/(hidden_folder)/(demos)/(markdown)/demos.markdown'
import { Route as hidden_folderdemoscopywritingDemosCopywritingRenderRouteImport } from './routes/(hidden_folder)/(demos)/(copywriting)/demos.copywriting.render'

const IndexLazyRouteImport = createFileRoute('/')()

const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const hidden_foldertoysToysTodoAppRoute =
  hidden_foldertoysToysTodoAppRouteImport.update({
    id: '/(hidden_folder)/(toys)/toys/todo-app',
    path: '/toys/todo-app',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_foldertoysToysStopwatchRoute =
  hidden_foldertoysToysStopwatchRouteImport.update({
    id: '/(hidden_folder)/(toys)/toys/stopwatch',
    path: '/toys/stopwatch',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_foldertoysToysColorPickerRoute =
  hidden_foldertoysToysColorPickerRouteImport.update({
    id: '/(hidden_folder)/(toys)/toys/color-picker',
    path: '/toys/color-picker',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_foldertoysToysClockRoute =
  hidden_foldertoysToysClockRouteImport.update({
    id: '/(hidden_folder)/(toys)/toys/clock',
    path: '/toys/clock',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderlibrariesLibsZustandRoute =
  hidden_folderlibrariesLibsZustandRouteImport.update({
    id: '/(hidden_folder)/(libraries)/libs/zustand',
    path: '/libs/zustand',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderlibrariesLibsDndRoute =
  hidden_folderlibrariesLibsDndRouteImport.update({
    id: '/(hidden_folder)/(libraries)/libs/dnd',
    path: '/libs/dnd',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderlibrariesLibsCvaTwmergeRoute =
  hidden_folderlibrariesLibsCvaTwmergeRouteImport.update({
    id: '/(hidden_folder)/(libraries)/libs/cva-twmerge',
    path: '/libs/cva-twmerge',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksWithoutusesyncexternalstoreRoute =
  hidden_folderhooksHooksWithoutusesyncexternalstoreRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/withoutusesyncexternalstore',
    path: '/hooks/withoutusesyncexternalstore',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUsetransitionRoute =
  hidden_folderhooksHooksUsetransitionRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/usetransition',
    path: '/hooks/usetransition',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUsethrottleRoute =
  hidden_folderhooksHooksUsethrottleRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/usethrottle',
    path: '/hooks/usethrottle',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUsesyncexternalstoreRoute =
  hidden_folderhooksHooksUsesyncexternalstoreRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/usesyncexternalstore',
    path: '/hooks/usesyncexternalstore',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUsestateRoute =
  hidden_folderhooksHooksUsestateRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/usestate',
    path: '/hooks/usestate',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUserefRoute =
  hidden_folderhooksHooksUserefRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/useref',
    path: '/hooks/useref',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUsereducerRoute =
  hidden_folderhooksHooksUsereducerRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/usereducer',
    path: '/hooks/usereducer',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUsememoRoute =
  hidden_folderhooksHooksUsememoRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/usememo',
    path: '/hooks/usememo',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUselayouteffectRoute =
  hidden_folderhooksHooksUselayouteffectRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/uselayouteffect',
    path: '/hooks/uselayouteffect',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUseintervalRoute =
  hidden_folderhooksHooksUseintervalRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/useinterval',
    path: '/hooks/useinterval',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUseinsertioneffectRoute =
  hidden_folderhooksHooksUseinsertioneffectRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/useinsertioneffect',
    path: '/hooks/useinsertioneffect',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUseimperativehandleRoute =
  hidden_folderhooksHooksUseimperativehandleRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/useimperativehandle',
    path: '/hooks/useimperativehandle',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUseidRoute =
  hidden_folderhooksHooksUseidRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/useid',
    path: '/hooks/useid',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUseeffectRoute =
  hidden_folderhooksHooksUseeffectRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/useeffect',
    path: '/hooks/useeffect',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUsedeferredvalueRoute =
  hidden_folderhooksHooksUsedeferredvalueRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/usedeferredvalue',
    path: '/hooks/usedeferredvalue',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUsedebounceRoute =
  hidden_folderhooksHooksUsedebounceRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/usedebounce',
    path: '/hooks/usedebounce',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUsecontextRoute =
  hidden_folderhooksHooksUsecontextRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/usecontext',
    path: '/hooks/usecontext',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksUsecallbackRoute =
  hidden_folderhooksHooksUsecallbackRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/usecallback',
    path: '/hooks/usecallback',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksIntervalProblem2Route =
  hidden_folderhooksHooksIntervalProblem2RouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/interval-problem-2',
    path: '/hooks/interval-problem-2',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksIntervalProblem1Route =
  hidden_folderhooksHooksIntervalProblem1RouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/interval-problem-1',
    path: '/hooks/interval-problem-1',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderhooksHooksBeforeUsecallbackRoute =
  hidden_folderhooksHooksBeforeUsecallbackRouteImport.update({
    id: '/(hidden_folder)/(hooks)/hooks/before-usecallback',
    path: '/hooks/before-usecallback',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderdata_fetchingDataFetchingReactQueryRoute =
  hidden_folderdata_fetchingDataFetchingReactQueryRouteImport.update({
    id: '/(hidden_folder)/(data_fetching)/data-fetching/react-query',
    path: '/data-fetching/react-query',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderdata_fetchingDataFetchingOwnHandleRoute =
  hidden_folderdata_fetchingDataFetchingOwnHandleRouteImport.update({
    id: '/(hidden_folder)/(data_fetching)/data-fetching/own-handle',
    path: '/data-fetching/own-handle',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderbasicBasicPropsChildrenRoute =
  hidden_folderbasicBasicPropsChildrenRouteImport.update({
    id: '/(hidden_folder)/(basic)/basic/props-children',
    path: '/basic/props-children',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderbasicBasicPortalRoute =
  hidden_folderbasicBasicPortalRouteImport.update({
    id: '/(hidden_folder)/(basic)/basic/portal',
    path: '/basic/portal',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderbasicBasicListOfDataRoute =
  hidden_folderbasicBasicListOfDataRouteImport.update({
    id: '/(hidden_folder)/(basic)/basic/list-of-data',
    path: '/basic/list-of-data',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderbasicBasicConditionalRenderingRoute =
  hidden_folderbasicBasicConditionalRenderingRouteImport.update({
    id: '/(hidden_folder)/(basic)/basic/conditional-rendering',
    path: '/basic/conditional-rendering',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderanimationMt01Route =
  hidden_folderanimationMt01RouteImport.update({
    id: '/(hidden_folder)/(animation)/mt/01',
    path: '/mt/01',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderanimationMh02Route =
  hidden_folderanimationMh02RouteImport.update({
    id: '/(hidden_folder)/(animation)/mh/02',
    path: '/mh/02',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderanimationMh01Route =
  hidden_folderanimationMh01RouteImport.update({
    id: '/(hidden_folder)/(animation)/mh/01',
    path: '/mh/01',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderanimationMg01Route =
  hidden_folderanimationMg01RouteImport.update({
    id: '/(hidden_folder)/(animation)/mg/01',
    path: '/mg/01',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderanimationM01Route =
  hidden_folderanimationM01RouteImport.update({
    id: '/(hidden_folder)/(animation)/m/01',
    path: '/m/01',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderdemosverify_emailDemosVerifyPageRoute =
  hidden_folderdemosverify_emailDemosVerifyPageRouteImport.update({
    id: '/(hidden_folder)/(demos)/(verify_email)/demos/verify-page',
    path: '/demos/verify-page',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderdemosverify_emailDemosResultPageRoute =
  hidden_folderdemosverify_emailDemosResultPageRouteImport.update({
    id: '/(hidden_folder)/(demos)/(verify_email)/demos/result-page',
    path: '/demos/result-page',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderdemostoastDemosToastRoute =
  hidden_folderdemostoastDemosToastRouteImport.update({
    id: '/(hidden_folder)/(demos)/(toast)/demos/toast',
    path: '/demos/toast',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderdemosmarkdownDemosMarkdownRoute =
  hidden_folderdemosmarkdownDemosMarkdownRouteImport.update({
    id: '/(hidden_folder)/(demos)/(markdown)/demos/markdown',
    path: '/demos/markdown',
    getParentRoute: () => rootRouteImport,
  } as any)
const hidden_folderdemoscopywritingDemosCopywritingRenderRoute =
  hidden_folderdemoscopywritingDemosCopywritingRenderRouteImport.update({
    id: '/(hidden_folder)/(demos)/(copywriting)/demos/copywriting/render',
    path: '/demos/copywriting/render',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/m/01': typeof hidden_folderanimationM01Route
  '/mg/01': typeof hidden_folderanimationMg01Route
  '/mh/01': typeof hidden_folderanimationMh01Route
  '/mh/02': typeof hidden_folderanimationMh02Route
  '/mt/01': typeof hidden_folderanimationMt01Route
  '/basic/conditional-rendering': typeof hidden_folderbasicBasicConditionalRenderingRoute
  '/basic/list-of-data': typeof hidden_folderbasicBasicListOfDataRoute
  '/basic/portal': typeof hidden_folderbasicBasicPortalRoute
  '/basic/props-children': typeof hidden_folderbasicBasicPropsChildrenRoute
  '/data-fetching/own-handle': typeof hidden_folderdata_fetchingDataFetchingOwnHandleRoute
  '/data-fetching/react-query': typeof hidden_folderdata_fetchingDataFetchingReactQueryRoute
  '/hooks/before-usecallback': typeof hidden_folderhooksHooksBeforeUsecallbackRoute
  '/hooks/interval-problem-1': typeof hidden_folderhooksHooksIntervalProblem1Route
  '/hooks/interval-problem-2': typeof hidden_folderhooksHooksIntervalProblem2Route
  '/hooks/usecallback': typeof hidden_folderhooksHooksUsecallbackRoute
  '/hooks/usecontext': typeof hidden_folderhooksHooksUsecontextRoute
  '/hooks/usedebounce': typeof hidden_folderhooksHooksUsedebounceRoute
  '/hooks/usedeferredvalue': typeof hidden_folderhooksHooksUsedeferredvalueRoute
  '/hooks/useeffect': typeof hidden_folderhooksHooksUseeffectRoute
  '/hooks/useid': typeof hidden_folderhooksHooksUseidRoute
  '/hooks/useimperativehandle': typeof hidden_folderhooksHooksUseimperativehandleRoute
  '/hooks/useinsertioneffect': typeof hidden_folderhooksHooksUseinsertioneffectRoute
  '/hooks/useinterval': typeof hidden_folderhooksHooksUseintervalRoute
  '/hooks/uselayouteffect': typeof hidden_folderhooksHooksUselayouteffectRoute
  '/hooks/usememo': typeof hidden_folderhooksHooksUsememoRoute
  '/hooks/usereducer': typeof hidden_folderhooksHooksUsereducerRoute
  '/hooks/useref': typeof hidden_folderhooksHooksUserefRoute
  '/hooks/usestate': typeof hidden_folderhooksHooksUsestateRoute
  '/hooks/usesyncexternalstore': typeof hidden_folderhooksHooksUsesyncexternalstoreRoute
  '/hooks/usethrottle': typeof hidden_folderhooksHooksUsethrottleRoute
  '/hooks/usetransition': typeof hidden_folderhooksHooksUsetransitionRoute
  '/hooks/withoutusesyncexternalstore': typeof hidden_folderhooksHooksWithoutusesyncexternalstoreRoute
  '/libs/cva-twmerge': typeof hidden_folderlibrariesLibsCvaTwmergeRoute
  '/libs/dnd': typeof hidden_folderlibrariesLibsDndRoute
  '/libs/zustand': typeof hidden_folderlibrariesLibsZustandRoute
  '/toys/clock': typeof hidden_foldertoysToysClockRoute
  '/toys/color-picker': typeof hidden_foldertoysToysColorPickerRoute
  '/toys/stopwatch': typeof hidden_foldertoysToysStopwatchRoute
  '/toys/todo-app': typeof hidden_foldertoysToysTodoAppRoute
  '/demos/markdown': typeof hidden_folderdemosmarkdownDemosMarkdownRoute
  '/demos/toast': typeof hidden_folderdemostoastDemosToastRoute
  '/demos/result-page': typeof hidden_folderdemosverify_emailDemosResultPageRoute
  '/demos/verify-page': typeof hidden_folderdemosverify_emailDemosVerifyPageRoute
  '/demos/copywriting/render': typeof hidden_folderdemoscopywritingDemosCopywritingRenderRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/m/01': typeof hidden_folderanimationM01Route
  '/mg/01': typeof hidden_folderanimationMg01Route
  '/mh/01': typeof hidden_folderanimationMh01Route
  '/mh/02': typeof hidden_folderanimationMh02Route
  '/mt/01': typeof hidden_folderanimationMt01Route
  '/basic/conditional-rendering': typeof hidden_folderbasicBasicConditionalRenderingRoute
  '/basic/list-of-data': typeof hidden_folderbasicBasicListOfDataRoute
  '/basic/portal': typeof hidden_folderbasicBasicPortalRoute
  '/basic/props-children': typeof hidden_folderbasicBasicPropsChildrenRoute
  '/data-fetching/own-handle': typeof hidden_folderdata_fetchingDataFetchingOwnHandleRoute
  '/data-fetching/react-query': typeof hidden_folderdata_fetchingDataFetchingReactQueryRoute
  '/hooks/before-usecallback': typeof hidden_folderhooksHooksBeforeUsecallbackRoute
  '/hooks/interval-problem-1': typeof hidden_folderhooksHooksIntervalProblem1Route
  '/hooks/interval-problem-2': typeof hidden_folderhooksHooksIntervalProblem2Route
  '/hooks/usecallback': typeof hidden_folderhooksHooksUsecallbackRoute
  '/hooks/usecontext': typeof hidden_folderhooksHooksUsecontextRoute
  '/hooks/usedebounce': typeof hidden_folderhooksHooksUsedebounceRoute
  '/hooks/usedeferredvalue': typeof hidden_folderhooksHooksUsedeferredvalueRoute
  '/hooks/useeffect': typeof hidden_folderhooksHooksUseeffectRoute
  '/hooks/useid': typeof hidden_folderhooksHooksUseidRoute
  '/hooks/useimperativehandle': typeof hidden_folderhooksHooksUseimperativehandleRoute
  '/hooks/useinsertioneffect': typeof hidden_folderhooksHooksUseinsertioneffectRoute
  '/hooks/useinterval': typeof hidden_folderhooksHooksUseintervalRoute
  '/hooks/uselayouteffect': typeof hidden_folderhooksHooksUselayouteffectRoute
  '/hooks/usememo': typeof hidden_folderhooksHooksUsememoRoute
  '/hooks/usereducer': typeof hidden_folderhooksHooksUsereducerRoute
  '/hooks/useref': typeof hidden_folderhooksHooksUserefRoute
  '/hooks/usestate': typeof hidden_folderhooksHooksUsestateRoute
  '/hooks/usesyncexternalstore': typeof hidden_folderhooksHooksUsesyncexternalstoreRoute
  '/hooks/usethrottle': typeof hidden_folderhooksHooksUsethrottleRoute
  '/hooks/usetransition': typeof hidden_folderhooksHooksUsetransitionRoute
  '/hooks/withoutusesyncexternalstore': typeof hidden_folderhooksHooksWithoutusesyncexternalstoreRoute
  '/libs/cva-twmerge': typeof hidden_folderlibrariesLibsCvaTwmergeRoute
  '/libs/dnd': typeof hidden_folderlibrariesLibsDndRoute
  '/libs/zustand': typeof hidden_folderlibrariesLibsZustandRoute
  '/toys/clock': typeof hidden_foldertoysToysClockRoute
  '/toys/color-picker': typeof hidden_foldertoysToysColorPickerRoute
  '/toys/stopwatch': typeof hidden_foldertoysToysStopwatchRoute
  '/toys/todo-app': typeof hidden_foldertoysToysTodoAppRoute
  '/demos/markdown': typeof hidden_folderdemosmarkdownDemosMarkdownRoute
  '/demos/toast': typeof hidden_folderdemostoastDemosToastRoute
  '/demos/result-page': typeof hidden_folderdemosverify_emailDemosResultPageRoute
  '/demos/verify-page': typeof hidden_folderdemosverify_emailDemosVerifyPageRoute
  '/demos/copywriting/render': typeof hidden_folderdemoscopywritingDemosCopywritingRenderRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/(hidden_folder)/(animation)/m/01': typeof hidden_folderanimationM01Route
  '/(hidden_folder)/(animation)/mg/01': typeof hidden_folderanimationMg01Route
  '/(hidden_folder)/(animation)/mh/01': typeof hidden_folderanimationMh01Route
  '/(hidden_folder)/(animation)/mh/02': typeof hidden_folderanimationMh02Route
  '/(hidden_folder)/(animation)/mt/01': typeof hidden_folderanimationMt01Route
  '/(hidden_folder)/(basic)/basic/conditional-rendering': typeof hidden_folderbasicBasicConditionalRenderingRoute
  '/(hidden_folder)/(basic)/basic/list-of-data': typeof hidden_folderbasicBasicListOfDataRoute
  '/(hidden_folder)/(basic)/basic/portal': typeof hidden_folderbasicBasicPortalRoute
  '/(hidden_folder)/(basic)/basic/props-children': typeof hidden_folderbasicBasicPropsChildrenRoute
  '/(hidden_folder)/(data_fetching)/data-fetching/own-handle': typeof hidden_folderdata_fetchingDataFetchingOwnHandleRoute
  '/(hidden_folder)/(data_fetching)/data-fetching/react-query': typeof hidden_folderdata_fetchingDataFetchingReactQueryRoute
  '/(hidden_folder)/(hooks)/hooks/before-usecallback': typeof hidden_folderhooksHooksBeforeUsecallbackRoute
  '/(hidden_folder)/(hooks)/hooks/interval-problem-1': typeof hidden_folderhooksHooksIntervalProblem1Route
  '/(hidden_folder)/(hooks)/hooks/interval-problem-2': typeof hidden_folderhooksHooksIntervalProblem2Route
  '/(hidden_folder)/(hooks)/hooks/usecallback': typeof hidden_folderhooksHooksUsecallbackRoute
  '/(hidden_folder)/(hooks)/hooks/usecontext': typeof hidden_folderhooksHooksUsecontextRoute
  '/(hidden_folder)/(hooks)/hooks/usedebounce': typeof hidden_folderhooksHooksUsedebounceRoute
  '/(hidden_folder)/(hooks)/hooks/usedeferredvalue': typeof hidden_folderhooksHooksUsedeferredvalueRoute
  '/(hidden_folder)/(hooks)/hooks/useeffect': typeof hidden_folderhooksHooksUseeffectRoute
  '/(hidden_folder)/(hooks)/hooks/useid': typeof hidden_folderhooksHooksUseidRoute
  '/(hidden_folder)/(hooks)/hooks/useimperativehandle': typeof hidden_folderhooksHooksUseimperativehandleRoute
  '/(hidden_folder)/(hooks)/hooks/useinsertioneffect': typeof hidden_folderhooksHooksUseinsertioneffectRoute
  '/(hidden_folder)/(hooks)/hooks/useinterval': typeof hidden_folderhooksHooksUseintervalRoute
  '/(hidden_folder)/(hooks)/hooks/uselayouteffect': typeof hidden_folderhooksHooksUselayouteffectRoute
  '/(hidden_folder)/(hooks)/hooks/usememo': typeof hidden_folderhooksHooksUsememoRoute
  '/(hidden_folder)/(hooks)/hooks/usereducer': typeof hidden_folderhooksHooksUsereducerRoute
  '/(hidden_folder)/(hooks)/hooks/useref': typeof hidden_folderhooksHooksUserefRoute
  '/(hidden_folder)/(hooks)/hooks/usestate': typeof hidden_folderhooksHooksUsestateRoute
  '/(hidden_folder)/(hooks)/hooks/usesyncexternalstore': typeof hidden_folderhooksHooksUsesyncexternalstoreRoute
  '/(hidden_folder)/(hooks)/hooks/usethrottle': typeof hidden_folderhooksHooksUsethrottleRoute
  '/(hidden_folder)/(hooks)/hooks/usetransition': typeof hidden_folderhooksHooksUsetransitionRoute
  '/(hidden_folder)/(hooks)/hooks/withoutusesyncexternalstore': typeof hidden_folderhooksHooksWithoutusesyncexternalstoreRoute
  '/(hidden_folder)/(libraries)/libs/cva-twmerge': typeof hidden_folderlibrariesLibsCvaTwmergeRoute
  '/(hidden_folder)/(libraries)/libs/dnd': typeof hidden_folderlibrariesLibsDndRoute
  '/(hidden_folder)/(libraries)/libs/zustand': typeof hidden_folderlibrariesLibsZustandRoute
  '/(hidden_folder)/(toys)/toys/clock': typeof hidden_foldertoysToysClockRoute
  '/(hidden_folder)/(toys)/toys/color-picker': typeof hidden_foldertoysToysColorPickerRoute
  '/(hidden_folder)/(toys)/toys/stopwatch': typeof hidden_foldertoysToysStopwatchRoute
  '/(hidden_folder)/(toys)/toys/todo-app': typeof hidden_foldertoysToysTodoAppRoute
  '/(hidden_folder)/(demos)/(markdown)/demos/markdown': typeof hidden_folderdemosmarkdownDemosMarkdownRoute
  '/(hidden_folder)/(demos)/(toast)/demos/toast': typeof hidden_folderdemostoastDemosToastRoute
  '/(hidden_folder)/(demos)/(verify_email)/demos/result-page': typeof hidden_folderdemosverify_emailDemosResultPageRoute
  '/(hidden_folder)/(demos)/(verify_email)/demos/verify-page': typeof hidden_folderdemosverify_emailDemosVerifyPageRoute
  '/(hidden_folder)/(demos)/(copywriting)/demos/copywriting/render': typeof hidden_folderdemoscopywritingDemosCopywritingRenderRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/m/01'
    | '/mg/01'
    | '/mh/01'
    | '/mh/02'
    | '/mt/01'
    | '/basic/conditional-rendering'
    | '/basic/list-of-data'
    | '/basic/portal'
    | '/basic/props-children'
    | '/data-fetching/own-handle'
    | '/data-fetching/react-query'
    | '/hooks/before-usecallback'
    | '/hooks/interval-problem-1'
    | '/hooks/interval-problem-2'
    | '/hooks/usecallback'
    | '/hooks/usecontext'
    | '/hooks/usedebounce'
    | '/hooks/usedeferredvalue'
    | '/hooks/useeffect'
    | '/hooks/useid'
    | '/hooks/useimperativehandle'
    | '/hooks/useinsertioneffect'
    | '/hooks/useinterval'
    | '/hooks/uselayouteffect'
    | '/hooks/usememo'
    | '/hooks/usereducer'
    | '/hooks/useref'
    | '/hooks/usestate'
    | '/hooks/usesyncexternalstore'
    | '/hooks/usethrottle'
    | '/hooks/usetransition'
    | '/hooks/withoutusesyncexternalstore'
    | '/libs/cva-twmerge'
    | '/libs/dnd'
    | '/libs/zustand'
    | '/toys/clock'
    | '/toys/color-picker'
    | '/toys/stopwatch'
    | '/toys/todo-app'
    | '/demos/markdown'
    | '/demos/toast'
    | '/demos/result-page'
    | '/demos/verify-page'
    | '/demos/copywriting/render'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/m/01'
    | '/mg/01'
    | '/mh/01'
    | '/mh/02'
    | '/mt/01'
    | '/basic/conditional-rendering'
    | '/basic/list-of-data'
    | '/basic/portal'
    | '/basic/props-children'
    | '/data-fetching/own-handle'
    | '/data-fetching/react-query'
    | '/hooks/before-usecallback'
    | '/hooks/interval-problem-1'
    | '/hooks/interval-problem-2'
    | '/hooks/usecallback'
    | '/hooks/usecontext'
    | '/hooks/usedebounce'
    | '/hooks/usedeferredvalue'
    | '/hooks/useeffect'
    | '/hooks/useid'
    | '/hooks/useimperativehandle'
    | '/hooks/useinsertioneffect'
    | '/hooks/useinterval'
    | '/hooks/uselayouteffect'
    | '/hooks/usememo'
    | '/hooks/usereducer'
    | '/hooks/useref'
    | '/hooks/usestate'
    | '/hooks/usesyncexternalstore'
    | '/hooks/usethrottle'
    | '/hooks/usetransition'
    | '/hooks/withoutusesyncexternalstore'
    | '/libs/cva-twmerge'
    | '/libs/dnd'
    | '/libs/zustand'
    | '/toys/clock'
    | '/toys/color-picker'
    | '/toys/stopwatch'
    | '/toys/todo-app'
    | '/demos/markdown'
    | '/demos/toast'
    | '/demos/result-page'
    | '/demos/verify-page'
    | '/demos/copywriting/render'
  id:
    | '__root__'
    | '/'
    | '/(hidden_folder)/(animation)/m/01'
    | '/(hidden_folder)/(animation)/mg/01'
    | '/(hidden_folder)/(animation)/mh/01'
    | '/(hidden_folder)/(animation)/mh/02'
    | '/(hidden_folder)/(animation)/mt/01'
    | '/(hidden_folder)/(basic)/basic/conditional-rendering'
    | '/(hidden_folder)/(basic)/basic/list-of-data'
    | '/(hidden_folder)/(basic)/basic/portal'
    | '/(hidden_folder)/(basic)/basic/props-children'
    | '/(hidden_folder)/(data_fetching)/data-fetching/own-handle'
    | '/(hidden_folder)/(data_fetching)/data-fetching/react-query'
    | '/(hidden_folder)/(hooks)/hooks/before-usecallback'
    | '/(hidden_folder)/(hooks)/hooks/interval-problem-1'
    | '/(hidden_folder)/(hooks)/hooks/interval-problem-2'
    | '/(hidden_folder)/(hooks)/hooks/usecallback'
    | '/(hidden_folder)/(hooks)/hooks/usecontext'
    | '/(hidden_folder)/(hooks)/hooks/usedebounce'
    | '/(hidden_folder)/(hooks)/hooks/usedeferredvalue'
    | '/(hidden_folder)/(hooks)/hooks/useeffect'
    | '/(hidden_folder)/(hooks)/hooks/useid'
    | '/(hidden_folder)/(hooks)/hooks/useimperativehandle'
    | '/(hidden_folder)/(hooks)/hooks/useinsertioneffect'
    | '/(hidden_folder)/(hooks)/hooks/useinterval'
    | '/(hidden_folder)/(hooks)/hooks/uselayouteffect'
    | '/(hidden_folder)/(hooks)/hooks/usememo'
    | '/(hidden_folder)/(hooks)/hooks/usereducer'
    | '/(hidden_folder)/(hooks)/hooks/useref'
    | '/(hidden_folder)/(hooks)/hooks/usestate'
    | '/(hidden_folder)/(hooks)/hooks/usesyncexternalstore'
    | '/(hidden_folder)/(hooks)/hooks/usethrottle'
    | '/(hidden_folder)/(hooks)/hooks/usetransition'
    | '/(hidden_folder)/(hooks)/hooks/withoutusesyncexternalstore'
    | '/(hidden_folder)/(libraries)/libs/cva-twmerge'
    | '/(hidden_folder)/(libraries)/libs/dnd'
    | '/(hidden_folder)/(libraries)/libs/zustand'
    | '/(hidden_folder)/(toys)/toys/clock'
    | '/(hidden_folder)/(toys)/toys/color-picker'
    | '/(hidden_folder)/(toys)/toys/stopwatch'
    | '/(hidden_folder)/(toys)/toys/todo-app'
    | '/(hidden_folder)/(demos)/(markdown)/demos/markdown'
    | '/(hidden_folder)/(demos)/(toast)/demos/toast'
    | '/(hidden_folder)/(demos)/(verify_email)/demos/result-page'
    | '/(hidden_folder)/(demos)/(verify_email)/demos/verify-page'
    | '/(hidden_folder)/(demos)/(copywriting)/demos/copywriting/render'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  hidden_folderanimationM01Route: typeof hidden_folderanimationM01Route
  hidden_folderanimationMg01Route: typeof hidden_folderanimationMg01Route
  hidden_folderanimationMh01Route: typeof hidden_folderanimationMh01Route
  hidden_folderanimationMh02Route: typeof hidden_folderanimationMh02Route
  hidden_folderanimationMt01Route: typeof hidden_folderanimationMt01Route
  hidden_folderbasicBasicConditionalRenderingRoute: typeof hidden_folderbasicBasicConditionalRenderingRoute
  hidden_folderbasicBasicListOfDataRoute: typeof hidden_folderbasicBasicListOfDataRoute
  hidden_folderbasicBasicPortalRoute: typeof hidden_folderbasicBasicPortalRoute
  hidden_folderbasicBasicPropsChildrenRoute: typeof hidden_folderbasicBasicPropsChildrenRoute
  hidden_folderdata_fetchingDataFetchingOwnHandleRoute: typeof hidden_folderdata_fetchingDataFetchingOwnHandleRoute
  hidden_folderdata_fetchingDataFetchingReactQueryRoute: typeof hidden_folderdata_fetchingDataFetchingReactQueryRoute
  hidden_folderhooksHooksBeforeUsecallbackRoute: typeof hidden_folderhooksHooksBeforeUsecallbackRoute
  hidden_folderhooksHooksIntervalProblem1Route: typeof hidden_folderhooksHooksIntervalProblem1Route
  hidden_folderhooksHooksIntervalProblem2Route: typeof hidden_folderhooksHooksIntervalProblem2Route
  hidden_folderhooksHooksUsecallbackRoute: typeof hidden_folderhooksHooksUsecallbackRoute
  hidden_folderhooksHooksUsecontextRoute: typeof hidden_folderhooksHooksUsecontextRoute
  hidden_folderhooksHooksUsedebounceRoute: typeof hidden_folderhooksHooksUsedebounceRoute
  hidden_folderhooksHooksUsedeferredvalueRoute: typeof hidden_folderhooksHooksUsedeferredvalueRoute
  hidden_folderhooksHooksUseeffectRoute: typeof hidden_folderhooksHooksUseeffectRoute
  hidden_folderhooksHooksUseidRoute: typeof hidden_folderhooksHooksUseidRoute
  hidden_folderhooksHooksUseimperativehandleRoute: typeof hidden_folderhooksHooksUseimperativehandleRoute
  hidden_folderhooksHooksUseinsertioneffectRoute: typeof hidden_folderhooksHooksUseinsertioneffectRoute
  hidden_folderhooksHooksUseintervalRoute: typeof hidden_folderhooksHooksUseintervalRoute
  hidden_folderhooksHooksUselayouteffectRoute: typeof hidden_folderhooksHooksUselayouteffectRoute
  hidden_folderhooksHooksUsememoRoute: typeof hidden_folderhooksHooksUsememoRoute
  hidden_folderhooksHooksUsereducerRoute: typeof hidden_folderhooksHooksUsereducerRoute
  hidden_folderhooksHooksUserefRoute: typeof hidden_folderhooksHooksUserefRoute
  hidden_folderhooksHooksUsestateRoute: typeof hidden_folderhooksHooksUsestateRoute
  hidden_folderhooksHooksUsesyncexternalstoreRoute: typeof hidden_folderhooksHooksUsesyncexternalstoreRoute
  hidden_folderhooksHooksUsethrottleRoute: typeof hidden_folderhooksHooksUsethrottleRoute
  hidden_folderhooksHooksUsetransitionRoute: typeof hidden_folderhooksHooksUsetransitionRoute
  hidden_folderhooksHooksWithoutusesyncexternalstoreRoute: typeof hidden_folderhooksHooksWithoutusesyncexternalstoreRoute
  hidden_folderlibrariesLibsCvaTwmergeRoute: typeof hidden_folderlibrariesLibsCvaTwmergeRoute
  hidden_folderlibrariesLibsDndRoute: typeof hidden_folderlibrariesLibsDndRoute
  hidden_folderlibrariesLibsZustandRoute: typeof hidden_folderlibrariesLibsZustandRoute
  hidden_foldertoysToysClockRoute: typeof hidden_foldertoysToysClockRoute
  hidden_foldertoysToysColorPickerRoute: typeof hidden_foldertoysToysColorPickerRoute
  hidden_foldertoysToysStopwatchRoute: typeof hidden_foldertoysToysStopwatchRoute
  hidden_foldertoysToysTodoAppRoute: typeof hidden_foldertoysToysTodoAppRoute
  hidden_folderdemosmarkdownDemosMarkdownRoute: typeof hidden_folderdemosmarkdownDemosMarkdownRoute
  hidden_folderdemostoastDemosToastRoute: typeof hidden_folderdemostoastDemosToastRoute
  hidden_folderdemosverify_emailDemosResultPageRoute: typeof hidden_folderdemosverify_emailDemosResultPageRoute
  hidden_folderdemosverify_emailDemosVerifyPageRoute: typeof hidden_folderdemosverify_emailDemosVerifyPageRoute
  hidden_folderdemoscopywritingDemosCopywritingRenderRoute: typeof hidden_folderdemoscopywritingDemosCopywritingRenderRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(toys)/toys/todo-app': {
      id: '/(hidden_folder)/(toys)/toys/todo-app'
      path: '/toys/todo-app'
      fullPath: '/toys/todo-app'
      preLoaderRoute: typeof hidden_foldertoysToysTodoAppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(toys)/toys/stopwatch': {
      id: '/(hidden_folder)/(toys)/toys/stopwatch'
      path: '/toys/stopwatch'
      fullPath: '/toys/stopwatch'
      preLoaderRoute: typeof hidden_foldertoysToysStopwatchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(toys)/toys/color-picker': {
      id: '/(hidden_folder)/(toys)/toys/color-picker'
      path: '/toys/color-picker'
      fullPath: '/toys/color-picker'
      preLoaderRoute: typeof hidden_foldertoysToysColorPickerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(toys)/toys/clock': {
      id: '/(hidden_folder)/(toys)/toys/clock'
      path: '/toys/clock'
      fullPath: '/toys/clock'
      preLoaderRoute: typeof hidden_foldertoysToysClockRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(libraries)/libs/zustand': {
      id: '/(hidden_folder)/(libraries)/libs/zustand'
      path: '/libs/zustand'
      fullPath: '/libs/zustand'
      preLoaderRoute: typeof hidden_folderlibrariesLibsZustandRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(libraries)/libs/dnd': {
      id: '/(hidden_folder)/(libraries)/libs/dnd'
      path: '/libs/dnd'
      fullPath: '/libs/dnd'
      preLoaderRoute: typeof hidden_folderlibrariesLibsDndRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(libraries)/libs/cva-twmerge': {
      id: '/(hidden_folder)/(libraries)/libs/cva-twmerge'
      path: '/libs/cva-twmerge'
      fullPath: '/libs/cva-twmerge'
      preLoaderRoute: typeof hidden_folderlibrariesLibsCvaTwmergeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/withoutusesyncexternalstore': {
      id: '/(hidden_folder)/(hooks)/hooks/withoutusesyncexternalstore'
      path: '/hooks/withoutusesyncexternalstore'
      fullPath: '/hooks/withoutusesyncexternalstore'
      preLoaderRoute: typeof hidden_folderhooksHooksWithoutusesyncexternalstoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/usetransition': {
      id: '/(hidden_folder)/(hooks)/hooks/usetransition'
      path: '/hooks/usetransition'
      fullPath: '/hooks/usetransition'
      preLoaderRoute: typeof hidden_folderhooksHooksUsetransitionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/usethrottle': {
      id: '/(hidden_folder)/(hooks)/hooks/usethrottle'
      path: '/hooks/usethrottle'
      fullPath: '/hooks/usethrottle'
      preLoaderRoute: typeof hidden_folderhooksHooksUsethrottleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/usesyncexternalstore': {
      id: '/(hidden_folder)/(hooks)/hooks/usesyncexternalstore'
      path: '/hooks/usesyncexternalstore'
      fullPath: '/hooks/usesyncexternalstore'
      preLoaderRoute: typeof hidden_folderhooksHooksUsesyncexternalstoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/usestate': {
      id: '/(hidden_folder)/(hooks)/hooks/usestate'
      path: '/hooks/usestate'
      fullPath: '/hooks/usestate'
      preLoaderRoute: typeof hidden_folderhooksHooksUsestateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/useref': {
      id: '/(hidden_folder)/(hooks)/hooks/useref'
      path: '/hooks/useref'
      fullPath: '/hooks/useref'
      preLoaderRoute: typeof hidden_folderhooksHooksUserefRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/usereducer': {
      id: '/(hidden_folder)/(hooks)/hooks/usereducer'
      path: '/hooks/usereducer'
      fullPath: '/hooks/usereducer'
      preLoaderRoute: typeof hidden_folderhooksHooksUsereducerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/usememo': {
      id: '/(hidden_folder)/(hooks)/hooks/usememo'
      path: '/hooks/usememo'
      fullPath: '/hooks/usememo'
      preLoaderRoute: typeof hidden_folderhooksHooksUsememoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/uselayouteffect': {
      id: '/(hidden_folder)/(hooks)/hooks/uselayouteffect'
      path: '/hooks/uselayouteffect'
      fullPath: '/hooks/uselayouteffect'
      preLoaderRoute: typeof hidden_folderhooksHooksUselayouteffectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/useinterval': {
      id: '/(hidden_folder)/(hooks)/hooks/useinterval'
      path: '/hooks/useinterval'
      fullPath: '/hooks/useinterval'
      preLoaderRoute: typeof hidden_folderhooksHooksUseintervalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/useinsertioneffect': {
      id: '/(hidden_folder)/(hooks)/hooks/useinsertioneffect'
      path: '/hooks/useinsertioneffect'
      fullPath: '/hooks/useinsertioneffect'
      preLoaderRoute: typeof hidden_folderhooksHooksUseinsertioneffectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/useimperativehandle': {
      id: '/(hidden_folder)/(hooks)/hooks/useimperativehandle'
      path: '/hooks/useimperativehandle'
      fullPath: '/hooks/useimperativehandle'
      preLoaderRoute: typeof hidden_folderhooksHooksUseimperativehandleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/useid': {
      id: '/(hidden_folder)/(hooks)/hooks/useid'
      path: '/hooks/useid'
      fullPath: '/hooks/useid'
      preLoaderRoute: typeof hidden_folderhooksHooksUseidRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/useeffect': {
      id: '/(hidden_folder)/(hooks)/hooks/useeffect'
      path: '/hooks/useeffect'
      fullPath: '/hooks/useeffect'
      preLoaderRoute: typeof hidden_folderhooksHooksUseeffectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/usedeferredvalue': {
      id: '/(hidden_folder)/(hooks)/hooks/usedeferredvalue'
      path: '/hooks/usedeferredvalue'
      fullPath: '/hooks/usedeferredvalue'
      preLoaderRoute: typeof hidden_folderhooksHooksUsedeferredvalueRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/usedebounce': {
      id: '/(hidden_folder)/(hooks)/hooks/usedebounce'
      path: '/hooks/usedebounce'
      fullPath: '/hooks/usedebounce'
      preLoaderRoute: typeof hidden_folderhooksHooksUsedebounceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/usecontext': {
      id: '/(hidden_folder)/(hooks)/hooks/usecontext'
      path: '/hooks/usecontext'
      fullPath: '/hooks/usecontext'
      preLoaderRoute: typeof hidden_folderhooksHooksUsecontextRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/usecallback': {
      id: '/(hidden_folder)/(hooks)/hooks/usecallback'
      path: '/hooks/usecallback'
      fullPath: '/hooks/usecallback'
      preLoaderRoute: typeof hidden_folderhooksHooksUsecallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/interval-problem-2': {
      id: '/(hidden_folder)/(hooks)/hooks/interval-problem-2'
      path: '/hooks/interval-problem-2'
      fullPath: '/hooks/interval-problem-2'
      preLoaderRoute: typeof hidden_folderhooksHooksIntervalProblem2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/interval-problem-1': {
      id: '/(hidden_folder)/(hooks)/hooks/interval-problem-1'
      path: '/hooks/interval-problem-1'
      fullPath: '/hooks/interval-problem-1'
      preLoaderRoute: typeof hidden_folderhooksHooksIntervalProblem1RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(hooks)/hooks/before-usecallback': {
      id: '/(hidden_folder)/(hooks)/hooks/before-usecallback'
      path: '/hooks/before-usecallback'
      fullPath: '/hooks/before-usecallback'
      preLoaderRoute: typeof hidden_folderhooksHooksBeforeUsecallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(data_fetching)/data-fetching/react-query': {
      id: '/(hidden_folder)/(data_fetching)/data-fetching/react-query'
      path: '/data-fetching/react-query'
      fullPath: '/data-fetching/react-query'
      preLoaderRoute: typeof hidden_folderdata_fetchingDataFetchingReactQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(data_fetching)/data-fetching/own-handle': {
      id: '/(hidden_folder)/(data_fetching)/data-fetching/own-handle'
      path: '/data-fetching/own-handle'
      fullPath: '/data-fetching/own-handle'
      preLoaderRoute: typeof hidden_folderdata_fetchingDataFetchingOwnHandleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(basic)/basic/props-children': {
      id: '/(hidden_folder)/(basic)/basic/props-children'
      path: '/basic/props-children'
      fullPath: '/basic/props-children'
      preLoaderRoute: typeof hidden_folderbasicBasicPropsChildrenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(basic)/basic/portal': {
      id: '/(hidden_folder)/(basic)/basic/portal'
      path: '/basic/portal'
      fullPath: '/basic/portal'
      preLoaderRoute: typeof hidden_folderbasicBasicPortalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(basic)/basic/list-of-data': {
      id: '/(hidden_folder)/(basic)/basic/list-of-data'
      path: '/basic/list-of-data'
      fullPath: '/basic/list-of-data'
      preLoaderRoute: typeof hidden_folderbasicBasicListOfDataRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(basic)/basic/conditional-rendering': {
      id: '/(hidden_folder)/(basic)/basic/conditional-rendering'
      path: '/basic/conditional-rendering'
      fullPath: '/basic/conditional-rendering'
      preLoaderRoute: typeof hidden_folderbasicBasicConditionalRenderingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(animation)/mt/01': {
      id: '/(hidden_folder)/(animation)/mt/01'
      path: '/mt/01'
      fullPath: '/mt/01'
      preLoaderRoute: typeof hidden_folderanimationMt01RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(animation)/mh/02': {
      id: '/(hidden_folder)/(animation)/mh/02'
      path: '/mh/02'
      fullPath: '/mh/02'
      preLoaderRoute: typeof hidden_folderanimationMh02RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(animation)/mh/01': {
      id: '/(hidden_folder)/(animation)/mh/01'
      path: '/mh/01'
      fullPath: '/mh/01'
      preLoaderRoute: typeof hidden_folderanimationMh01RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(animation)/mg/01': {
      id: '/(hidden_folder)/(animation)/mg/01'
      path: '/mg/01'
      fullPath: '/mg/01'
      preLoaderRoute: typeof hidden_folderanimationMg01RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(animation)/m/01': {
      id: '/(hidden_folder)/(animation)/m/01'
      path: '/m/01'
      fullPath: '/m/01'
      preLoaderRoute: typeof hidden_folderanimationM01RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(demos)/(verify_email)/demos/verify-page': {
      id: '/(hidden_folder)/(demos)/(verify_email)/demos/verify-page'
      path: '/demos/verify-page'
      fullPath: '/demos/verify-page'
      preLoaderRoute: typeof hidden_folderdemosverify_emailDemosVerifyPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(demos)/(verify_email)/demos/result-page': {
      id: '/(hidden_folder)/(demos)/(verify_email)/demos/result-page'
      path: '/demos/result-page'
      fullPath: '/demos/result-page'
      preLoaderRoute: typeof hidden_folderdemosverify_emailDemosResultPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(demos)/(toast)/demos/toast': {
      id: '/(hidden_folder)/(demos)/(toast)/demos/toast'
      path: '/demos/toast'
      fullPath: '/demos/toast'
      preLoaderRoute: typeof hidden_folderdemostoastDemosToastRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(demos)/(markdown)/demos/markdown': {
      id: '/(hidden_folder)/(demos)/(markdown)/demos/markdown'
      path: '/demos/markdown'
      fullPath: '/demos/markdown'
      preLoaderRoute: typeof hidden_folderdemosmarkdownDemosMarkdownRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(hidden_folder)/(demos)/(copywriting)/demos/copywriting/render': {
      id: '/(hidden_folder)/(demos)/(copywriting)/demos/copywriting/render'
      path: '/demos/copywriting/render'
      fullPath: '/demos/copywriting/render'
      preLoaderRoute: typeof hidden_folderdemoscopywritingDemosCopywritingRenderRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  hidden_folderanimationM01Route: hidden_folderanimationM01Route,
  hidden_folderanimationMg01Route: hidden_folderanimationMg01Route,
  hidden_folderanimationMh01Route: hidden_folderanimationMh01Route,
  hidden_folderanimationMh02Route: hidden_folderanimationMh02Route,
  hidden_folderanimationMt01Route: hidden_folderanimationMt01Route,
  hidden_folderbasicBasicConditionalRenderingRoute:
    hidden_folderbasicBasicConditionalRenderingRoute,
  hidden_folderbasicBasicListOfDataRoute:
    hidden_folderbasicBasicListOfDataRoute,
  hidden_folderbasicBasicPortalRoute: hidden_folderbasicBasicPortalRoute,
  hidden_folderbasicBasicPropsChildrenRoute:
    hidden_folderbasicBasicPropsChildrenRoute,
  hidden_folderdata_fetchingDataFetchingOwnHandleRoute:
    hidden_folderdata_fetchingDataFetchingOwnHandleRoute,
  hidden_folderdata_fetchingDataFetchingReactQueryRoute:
    hidden_folderdata_fetchingDataFetchingReactQueryRoute,
  hidden_folderhooksHooksBeforeUsecallbackRoute:
    hidden_folderhooksHooksBeforeUsecallbackRoute,
  hidden_folderhooksHooksIntervalProblem1Route:
    hidden_folderhooksHooksIntervalProblem1Route,
  hidden_folderhooksHooksIntervalProblem2Route:
    hidden_folderhooksHooksIntervalProblem2Route,
  hidden_folderhooksHooksUsecallbackRoute:
    hidden_folderhooksHooksUsecallbackRoute,
  hidden_folderhooksHooksUsecontextRoute:
    hidden_folderhooksHooksUsecontextRoute,
  hidden_folderhooksHooksUsedebounceRoute:
    hidden_folderhooksHooksUsedebounceRoute,
  hidden_folderhooksHooksUsedeferredvalueRoute:
    hidden_folderhooksHooksUsedeferredvalueRoute,
  hidden_folderhooksHooksUseeffectRoute: hidden_folderhooksHooksUseeffectRoute,
  hidden_folderhooksHooksUseidRoute: hidden_folderhooksHooksUseidRoute,
  hidden_folderhooksHooksUseimperativehandleRoute:
    hidden_folderhooksHooksUseimperativehandleRoute,
  hidden_folderhooksHooksUseinsertioneffectRoute:
    hidden_folderhooksHooksUseinsertioneffectRoute,
  hidden_folderhooksHooksUseintervalRoute:
    hidden_folderhooksHooksUseintervalRoute,
  hidden_folderhooksHooksUselayouteffectRoute:
    hidden_folderhooksHooksUselayouteffectRoute,
  hidden_folderhooksHooksUsememoRoute: hidden_folderhooksHooksUsememoRoute,
  hidden_folderhooksHooksUsereducerRoute:
    hidden_folderhooksHooksUsereducerRoute,
  hidden_folderhooksHooksUserefRoute: hidden_folderhooksHooksUserefRoute,
  hidden_folderhooksHooksUsestateRoute: hidden_folderhooksHooksUsestateRoute,
  hidden_folderhooksHooksUsesyncexternalstoreRoute:
    hidden_folderhooksHooksUsesyncexternalstoreRoute,
  hidden_folderhooksHooksUsethrottleRoute:
    hidden_folderhooksHooksUsethrottleRoute,
  hidden_folderhooksHooksUsetransitionRoute:
    hidden_folderhooksHooksUsetransitionRoute,
  hidden_folderhooksHooksWithoutusesyncexternalstoreRoute:
    hidden_folderhooksHooksWithoutusesyncexternalstoreRoute,
  hidden_folderlibrariesLibsCvaTwmergeRoute:
    hidden_folderlibrariesLibsCvaTwmergeRoute,
  hidden_folderlibrariesLibsDndRoute: hidden_folderlibrariesLibsDndRoute,
  hidden_folderlibrariesLibsZustandRoute:
    hidden_folderlibrariesLibsZustandRoute,
  hidden_foldertoysToysClockRoute: hidden_foldertoysToysClockRoute,
  hidden_foldertoysToysColorPickerRoute: hidden_foldertoysToysColorPickerRoute,
  hidden_foldertoysToysStopwatchRoute: hidden_foldertoysToysStopwatchRoute,
  hidden_foldertoysToysTodoAppRoute: hidden_foldertoysToysTodoAppRoute,
  hidden_folderdemosmarkdownDemosMarkdownRoute:
    hidden_folderdemosmarkdownDemosMarkdownRoute,
  hidden_folderdemostoastDemosToastRoute:
    hidden_folderdemostoastDemosToastRoute,
  hidden_folderdemosverify_emailDemosResultPageRoute:
    hidden_folderdemosverify_emailDemosResultPageRoute,
  hidden_folderdemosverify_emailDemosVerifyPageRoute:
    hidden_folderdemosverify_emailDemosVerifyPageRoute,
  hidden_folderdemoscopywritingDemosCopywritingRenderRoute:
    hidden_folderdemoscopywritingDemosCopywritingRenderRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
